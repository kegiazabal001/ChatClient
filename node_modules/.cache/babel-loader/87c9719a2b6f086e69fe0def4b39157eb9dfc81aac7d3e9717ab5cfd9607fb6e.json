{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimet\\\\Documents\\\\Ni\\\\L-W\\\\USB\\\\KUATRI2\\\\SGTA\\\\Osagarri\\\\fullChat\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/Chat.css';\nimport man1 from './img/man1.png';\nimport man2 from './img/man2.png';\n//import man3 from './img/man3.png';\n//import woman1 from './img/woman1.png';\n//import woman2 from './img/woman2.png';\nimport UserList from './UserList.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    handleLogout,\n    loggedUser\n  } = _ref;\n  function Message(_ref2) {\n    let {\n      sender,\n      msg,\n      time\n    } = _ref2;\n    //let icon = sender ? man1 : man2;\n    let className = sender === loggedUser ? \"container2 darker\" : \"container2\";\n    //let imgClass = sender ? \"right\" : \"\";\n    let timeClass = sender === loggedUser ? \"time-left\" : \"time-right\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: timeClass,\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n    //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\n  }\n\n  class MessageForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.newMessage = message => {\n        fetch('api/newMessage', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(loggedUser, selectedUser, message)\n        }).then(response => response.json()).then(data => {\n          if (data.message === \"ok\") {\n            document.querySelector(\".errorM\").innerHTML = \"\";\n            getMessages(selectedUser);\n          } else {\n            document.querySelector(\".errorM\").innerHTML = data.message;\n          }\n        });\n      };\n      this.state = {\n        message: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n    /*\r\n    sender\r\n        \"a\"\r\n        msg\r\n        \"Hello World!\"\r\n        time\r\n        \"12:00\"\r\n    */\n\n    handleSubmit(event) {\n      //const data = JSON.stringify(db)\n      let date = new Date();\n      let time = date.getHours() + \":\" + date.getMinutes();\n      event.preventDefault();\n      let message = {\n        sender: loggedUser,\n        msg: this.state.message,\n        time: time\n      };\n      newMessage(message);\n      //addMessage(true, this.state.message, time);\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"messageForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.message,\n            onChange: this.handleChange,\n            placeholder: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  const [selectedUser, setSelectedUser] = useState(null);\n  //selectedUser={selectedUser}\n\n  const [friendList, setFriendList] = useState(null);\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/api/friends/\" + loggedUser);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setFriendList(data.friends);\n      } else {\n        document.querySelector(\".error\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const getMessages = async friendName => {\n    try {\n      const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setMessages(data.messages);\n        document.querySelector(\".errorM\").innerHTML = \"\";\n      } else {\n        setMessages([]);\n        document.querySelector(\".errorM\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const logout = () => {\n    handleLogout();\n  };\n  const [messages, setMessages] = useState([]);\n  let counter = 3;\n\n  //const [searchQuery, setSearchQuery] = useState('');\n\n  function addMessage(sndr, message, t) {\n    let id = counter++;\n    let newMessage = {\n      id: {\n        id\n      },\n      sender: sndr,\n      msg: message,\n      time: t\n    };\n    setMessages([...messages, newMessage]);\n  }\n  const handleUserClick = userName => {\n    setSelectedUser(userName);\n    getMessages(userName);\n  };\n  const inprimatuMezuak = () => {\n    let mezuak = [];\n    for (let i = 0; i < messages.length; i++) {\n      mezuak.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          sender: messages[i].sender,\n          msg: messages[i].msg,\n          time: messages[i].time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this));\n    }\n    return mezuak;\n  };\n  if (!friendList) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Chat Messages \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: man1,\n          width: \"30px\",\n          alt: \"man1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 35\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(UserList, {\n            recentUsers: friendList,\n            handleUserClick: handleUserClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: inprimatuMezuak().map(message => message)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MessageForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(Chat, \"kIpWML6pVSdB7OSoFncB93m4Cu0=\");\n_c = Chat;\nexport default Chat;\n\n/*\r\n\r\n            const filteredUserList = userList.filter((user) =>{\r\n                    console.log(user);\r\n                    user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n                }\r\n            );\r\n\r\n                    <nav>\r\n                        <UserList recentUsers={filteredUserList} handleUserClick={handleUserClick} />\r\n                    </nav>\r\n\r\n                            {messages.map((message) => (\r\n                                <li key={message}>\r\n                                    <Message sender={message.sender} msg={message.msg} time={message.time} />\r\n                                </li>\r\n                            ))}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","man1","man2","UserList","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","handleLogout","loggedUser","Message","_ref2","sender","msg","time","className","timeClass","children","fileName","_jsxFileName","lineNumber","columnNumber","MessageForm","Component","constructor","props","newMessage","message","fetch","method","headers","body","JSON","stringify","selectedUser","then","response","json","data","document","querySelector","innerHTML","getMessages","state","handleChange","bind","handleSubmit","event","setState","target","value","date","Date","getHours","getMinutes","preventDefault","render","onSubmit","type","onChange","placeholder","setSelectedUser","friendList","setFriendList","getUsers","friends","err","console","error","friendName","setMessages","messages","logout","counter","addMessage","sndr","t","id","handleUserClick","userName","inprimatuMezuak","mezuak","i","length","push","src","width","alt","recentUsers","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/kimet/Documents/Ni/L-W/USB/KUATRI2/SGTA/Osagarri/fullChat/client/src/components/Chat.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './style/Chat.css';\r\nimport man1 from './img/man1.png';\r\nimport man2 from './img/man2.png';\r\n//import man3 from './img/man3.png';\r\n//import woman1 from './img/woman1.png';\r\n//import woman2 from './img/woman2.png';\r\nimport UserList from './UserList.js';\r\n\r\nfunction Chat({handleLogout, loggedUser}) {\r\n    function Message({ sender, msg, time }) {\r\n        //let icon = sender ? man1 : man2;\r\n        let className = sender===loggedUser ? \"container2 darker\" : \"container2\";\r\n        //let imgClass = sender ? \"right\" : \"\";\r\n        let timeClass = sender===loggedUser ? \"time-left\" : \"time-right\";\r\n      return (\r\n        <div className={className}>\r\n            <p>{ msg }</p>\r\n            <span className={timeClass}>{ time }</span>\r\n        </div>\r\n      );\r\n      //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\r\n    }\r\n\r\n    class MessageForm extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {message: ''};\r\n    \r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n        handleChange(event) {\r\n            this.setState({message: event.target.value});\r\n        }\r\n\r\n        newMessage = (message) => {\r\n            fetch('api/newMessage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(loggedUser, selectedUser, message),\r\n                }).then(response => response.json()).then(data => {\r\n                    if (data.message === \"ok\") {\r\n                        document.querySelector(\".errorM\").innerHTML = \"\";\r\n                        getMessages(selectedUser);\r\n                    } else {\r\n                        document.querySelector(\".errorM\").innerHTML = data.message;\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        /*\r\n        sender\r\n            \"a\"\r\n            msg\r\n            \"Hello World!\"\r\n            time\r\n            \"12:00\"\r\n        */\r\n    \r\n        handleSubmit(event) {\r\n            //const data = JSON.stringify(db)\r\n            let date = new Date();\r\n            let time = date.getHours() + \":\" + date.getMinutes();\r\n            event.preventDefault();\r\n            let message = { sender: loggedUser, msg: this.state.message, time: time };\r\n            newMessage(message);\r\n            //addMessage(true, this.state.message, time);\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} className='messageForm'>\r\n                    <label>\r\n                        <input type=\"text\" value={this.state.message} onChange={this.handleChange} placeholder='Message'/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    //selectedUser={selectedUser}\r\n    \r\n    const [friendList, setFriendList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n      }, []);\r\n    \r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/friends/\" + loggedUser);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setFriendList(data.friends);\r\n                \r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getMessages = async (friendName) => {\r\n        try {\r\n            const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setMessages(data.messages);\r\n                document.querySelector(\".errorM\").innerHTML = \"\";\r\n            } else {\r\n                setMessages([]);\r\n                document.querySelector(\".errorM\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        handleLogout();\r\n    }\r\n    \r\n    const [messages, setMessages] = useState([]);\r\n    \r\n    let counter = 3;\r\n\r\n    //const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    function addMessage(sndr, message, t) {\r\n        let id = counter++;\r\n        let newMessage = {id: { id }, sender: sndr, msg: message, time: t };\r\n        setMessages([...messages, newMessage]);\r\n    }\r\n\r\n    const handleUserClick = (userName) => {\r\n        setSelectedUser(userName);\r\n        getMessages(userName);\r\n    };\r\n\r\n    const inprimatuMezuak = () => {\r\n        let mezuak = [];\r\n        for (let i = 0; i < messages.length; i++) {\r\n            mezuak.push(<li key={i}><Message sender={messages[i].sender} msg={messages[i].msg} time={messages[i].time} /></li>);\r\n        }\r\n        return mezuak;\r\n    }\r\n\r\n    if (!friendList) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1>Chat Messages <img src={man1} width='30px' alt='man1'></img> </h1>\r\n                <div className=\"cont\">\r\n                    <nav>\r\n                        <UserList recentUsers={friendList} handleUserClick={handleUserClick} />\r\n                        <button onClick={logout}>Logout</button>\r\n                        <p className=\"error\"></p>\r\n                    </nav>\r\n                    <main>\r\n                        <p className=\"errorM\"></p>\r\n                        <ul>\r\n                            {inprimatuMezuak().map((message) => (message))}\r\n                        </ul>\r\n                        <MessageForm/>\r\n                    </main>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n\r\n/*\r\n\r\n            const filteredUserList = userList.filter((user) =>{\r\n                    console.log(user);\r\n                    user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n                }\r\n            );\r\n\r\n                    <nav>\r\n                        <UserList recentUsers={filteredUserList} handleUserClick={handleUserClick} />\r\n                    </nav>\r\n\r\n                            {messages.map((message) => (\r\n                                <li key={message}>\r\n                                    <Message sender={message.sender} msg={message.msg} time={message.time} />\r\n                                </li>\r\n                            ))}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}