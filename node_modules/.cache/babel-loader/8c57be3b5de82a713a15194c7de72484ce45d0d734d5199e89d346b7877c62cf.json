{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimet\\\\Documents\\\\Ni\\\\L-W\\\\USB\\\\KUATRI2\\\\SGTA\\\\Osagarri\\\\ChatClient\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/Chat.css';\nimport UserList from './UserList.js';\nimport Follow from './Follow.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    handleLogout\n  } = _ref;\n  const loggedUser = localStorage.getItem('session');\n  const [selectedUser, setSelectedUser] = useState(null);\n  //selectedUser={selectedUser}\n\n  const [friendList, setFriendList] = useState(null);\n  const [showChat, setShowChat] = useState(3);\n  function kargatu() {\n    if (showChat === 1) {\n      const messageList = document.getElementById('messageList');\n      function scrollDown() {\n        messageList.scrollTop = messageList.scrollHeight;\n      }\n      scrollDown();\n      messageList.addEventListener('DOMSubtreeModified', scrollDown);\n    }\n  }\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/api/friends/\" + loggedUser);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setFriendList(data.friends);\n      } else {\n        document.querySelector(\".error\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const getMessages = async friendName => {\n    try {\n      const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setMessages(data.messages);\n        document.querySelector(\".errorM\").innerHTML = \"\";\n      } else {\n        setMessages([]);\n        document.querySelector(\".errorM\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const logout = () => {\n    handleLogout(0);\n  };\n  const [messages, setMessages] = useState([]);\n  function Message(_ref2) {\n    let {\n      sender,\n      msg,\n      time\n    } = _ref2;\n    //let icon = sender ? man1 : man2;\n    let className = sender === loggedUser ? \"container2 darker\" : \"container2 lighter\";\n    //let imgClass = sender ? \"right\" : \"\";\n    let timeClass = sender === loggedUser ? \"time-left\" : \"time-right\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        id: \"miDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: timeClass,\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n    //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\n  }\n\n  class MessageForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.newMessage = message => {\n        const data = {\n          username: loggedUser,\n          friend: selectedUser,\n          message: message\n        };\n        fetch('/api/newMessage', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          if (data.message === \"ok\") {\n            document.querySelector(\".errorM\").innerHTML = \"\";\n            getMessages(selectedUser);\n          } else {\n            document.querySelector(\".errorM\").innerHTML = data.message;\n          }\n        });\n      };\n      this.state = {\n        message: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n    handleSubmit(event) {\n      //const data = JSON.stringify(db)\n      let date = new Date();\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let time = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes);\n      event.preventDefault();\n      let message = {\n        sender: loggedUser,\n        msg: this.state.message,\n        time: time\n      };\n      this.newMessage(message);\n      //addMessage(true, this.state.message, time);\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"messageForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.message,\n            onChange: this.handleChange,\n            placeholder: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  const handleUserClick = userName => {\n    setShowChat(1);\n    setSelectedUser(userName);\n    getMessages(userName);\n  };\n  const inprimatuMezuak = () => {\n    let mezuak = [];\n    for (let i = 0; i < messages.length; i++) {\n      mezuak.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          sender: messages[i].sender,\n          msg: messages[i].msg,\n          time: messages[i].time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this));\n    }\n    return mezuak;\n  };\n  const addFriend = () => {\n    setShowChat(0);\n  };\n  useEffect(() => {\n    kargatu();\n  }, [showChat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(UserList, {\n          recentUsers: friendList ? friendList : [],\n          handleUserClick: handleUserClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFriend,\n          className: \"addFriendButton\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"main\",\n        children: showChat === 0 ? /*#__PURE__*/_jsxDEV(Follow, {\n          logged: loggedUser,\n          friends: friendList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this) : showChat === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Chat Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"messageList\",\n              className: \"messageList\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: inprimatuMezuak().map(message => message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(MessageForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select a friend to chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Chat, \"XU0v2KzN1CLoVFt0kpMb9wDjrVM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","UserList","Follow","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","handleLogout","loggedUser","localStorage","getItem","selectedUser","setSelectedUser","friendList","setFriendList","showChat","setShowChat","kargatu","messageList","document","getElementById","scrollDown","scrollTop","scrollHeight","addEventListener","getUsers","response","fetch","data","json","message","friends","querySelector","innerHTML","err","console","error","getMessages","friendName","setMessages","messages","logout","Message","_ref2","sender","msg","time","className","timeClass","children","id","fileName","_jsxFileName","lineNumber","columnNumber","MessageForm","Component","constructor","props","newMessage","username","friend","method","headers","body","JSON","stringify","then","log","state","handleChange","bind","handleSubmit","event","setState","target","value","date","Date","hours","getHours","minutes","getMinutes","preventDefault","render","onSubmit","type","onChange","placeholder","handleUserClick","userName","inprimatuMezuak","mezuak","i","length","push","addFriend","recentUsers","onClick","logged","map","_c","$RefreshReg$"],"sources":["C:/Users/kimet/Documents/Ni/L-W/USB/KUATRI2/SGTA/Osagarri/ChatClient/src/components/Chat.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './style/Chat.css';\r\nimport UserList from './UserList.js';\r\nimport Follow from './Follow.js';\r\n\r\nfunction Chat({handleLogout}) {\r\n    const loggedUser = localStorage.getItem('session');\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    //selectedUser={selectedUser}\r\n    \r\n    const [friendList, setFriendList] = useState(null);\r\n\r\n    const [showChat, setShowChat] = useState(3);\r\n\r\n    function kargatu() {\r\n        if (showChat === 1) {\r\n            const messageList = document.getElementById('messageList');\r\n            function scrollDown() {\r\n                messageList.scrollTop = messageList.scrollHeight;\r\n            }\r\n            \r\n            scrollDown();\r\n            messageList.addEventListener('DOMSubtreeModified', scrollDown);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n      }, []);\r\n    \r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/friends/\" + loggedUser);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setFriendList(data.friends);\r\n                \r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getMessages = async (friendName) => {\r\n        try {\r\n            const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setMessages(data.messages);\r\n                document.querySelector(\".errorM\").innerHTML = \"\";\r\n            } else {\r\n                setMessages([]);\r\n                document.querySelector(\".errorM\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        handleLogout(0);\r\n    }\r\n    \r\n    const [messages, setMessages] = useState([]);\r\n\r\n    function Message({ sender, msg, time }) {\r\n        //let icon = sender ? man1 : man2;\r\n        let className = sender===loggedUser ? \"container2 darker\" : \"container2 lighter\";\r\n        //let imgClass = sender ? \"right\" : \"\";\r\n        let timeClass = sender===loggedUser ? \"time-left\" : \"time-right\";\r\n      return (\r\n        <div className='message'>\r\n            <div className={className} id='miDiv'>\r\n                <p>{ msg }</p>\r\n                <span className={timeClass}>{ time }</span>\r\n            </div>\r\n        </div>\r\n      );\r\n      //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\r\n    }\r\n\r\n    class MessageForm extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {message: ''};\r\n    \r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n        handleChange(event) {\r\n            this.setState({message: event.target.value});\r\n        }\r\n\r\n        newMessage = (message) => {\r\n            const data = {\r\n                username: loggedUser,\r\n                friend: selectedUser,\r\n                message: message\r\n            };\r\n            fetch('/api/newMessage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                }).then(response => response.json()).then(data => {\r\n                    console.log(data);\r\n                    if (data.message === \"ok\") {\r\n                        document.querySelector(\".errorM\").innerHTML = \"\";\r\n                        getMessages(selectedUser);\r\n                    } else {\r\n                        document.querySelector(\".errorM\").innerHTML = data.message;\r\n                    }\r\n                });\r\n        }\r\n    \r\n        handleSubmit(event) {\r\n            //const data = JSON.stringify(db)\r\n            let date = new Date();\r\n            let hours= date.getHours();\r\n            let minutes = date.getMinutes();\r\n            let time = (hours<10 ? \"0\"+hours : hours) + \":\" + (minutes<10 ? \"0\"+minutes : minutes);\r\n            event.preventDefault();\r\n            let message = { sender: loggedUser, msg: this.state.message, time: time };\r\n            this.newMessage(message);\r\n            //addMessage(true, this.state.message, time);\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} className='messageForm'>\r\n                    <label>\r\n                        <input type=\"text\" value={this.state.message} onChange={this.handleChange} placeholder='Message'/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\">\" />\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\n    const handleUserClick = (userName) => {\r\n        setShowChat(1);\r\n        setSelectedUser(userName);\r\n        getMessages(userName);\r\n    };\r\n\r\n    const inprimatuMezuak = () => {\r\n        let mezuak = [];\r\n        for (let i = 0; i < messages.length; i++) {\r\n            mezuak.push(<li key={i}><Message sender={messages[i].sender} msg={messages[i].msg} time={messages[i].time} /></li>);\r\n        }\r\n        \r\n        return mezuak;\r\n    }\r\n\r\n    const addFriend = () => {\r\n        setShowChat(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        kargatu();\r\n    }, [showChat]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cont\">\r\n                <nav>\r\n                    <UserList recentUsers={friendList? friendList : []} handleUserClick={handleUserClick} />\r\n                    <button onClick={addFriend} className='addFriendButton'>+</button>\r\n                    <p className=\"error\"></p>\r\n                    <button onClick={logout} className='logout'>Logout</button>\r\n                </nav>\r\n                <main id='main'>\r\n                    {\r\n                        showChat === 0 ? (\r\n                            <Follow logged={loggedUser} friends={friendList} />\r\n                        ): showChat === 1 ?(\r\n                            <>\r\n                                <div className=\"chat\">\r\n                                    <h1>Chat Messages</h1>\r\n                                    <h2>{selectedUser}</h2>\r\n                                    <div id=\"messageList\" className='messageList'>\r\n                                        <p className=\"errorM\"></p>\r\n                                        <ul>\r\n                                            {inprimatuMezuak().map((message) => (message))}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <MessageForm/>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <h1>Select a friend to chat</h1>\r\n                        )\r\n                    }\r\n                </main>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}