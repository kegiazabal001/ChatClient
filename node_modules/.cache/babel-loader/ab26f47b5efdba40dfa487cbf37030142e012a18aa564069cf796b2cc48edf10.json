{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimet\\\\Documents\\\\Ni\\\\L-W\\\\USB\\\\KUATRI2\\\\SGTA\\\\Osagarri\\\\ChatClient\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/Chat.css';\n//import man1 from './img/man1.png';\n//import man2 from './img/man2.png';\n//import man3 from './img/man3.png';\n//import woman1 from './img/woman1.png';\n//import woman2 from './img/woman2.png';\nimport UserList from './UserList.js';\nimport Follow from './Follow.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    handleChat,\n    loggedUser\n  } = _ref;\n  const [selectedUser, setSelectedUser] = useState(null);\n  //selectedUser={selectedUser}\n\n  const [friendList, setFriendList] = useState(null);\n  const [showChat, setShowChat] = useState(3);\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/api/friends/\" + loggedUser);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setFriendList(data.friends);\n      } else {\n        document.querySelector(\".error\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const getMessages = async friendName => {\n    try {\n      const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\n      const data = await response.json();\n      if (data.message === \"ok\") {\n        setMessages(data.messages);\n        document.querySelector(\".errorM\").innerHTML = \"\";\n      } else {\n        setMessages([]);\n        document.querySelector(\".errorM\").innerHTML = data.message;\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const logout = () => {\n    handleChat(0);\n  };\n  const refresh = () => {\n    handleChat(1);\n  };\n  const [messages, setMessages] = useState([]);\n  function Message(_ref2) {\n    let {\n      sender,\n      msg,\n      time\n    } = _ref2;\n    //let icon = sender ? man1 : man2;\n    let className = sender === loggedUser ? \"container2 darker\" : \"container2\";\n    //let imgClass = sender ? \"right\" : \"\";\n    let timeClass = sender === loggedUser ? \"time-left\" : \"time-right\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: timeClass,\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n    //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\n  }\n\n  class MessageForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.newMessage = message => {\n        const data = {\n          username: loggedUser,\n          friend: selectedUser,\n          message: message\n        };\n        fetch('/api/newMessage', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          if (data.message === \"ok\") {\n            document.querySelector(\".errorM\").innerHTML = \"\";\n            getMessages(selectedUser);\n          } else {\n            document.querySelector(\".errorM\").innerHTML = data.message;\n          }\n        });\n      };\n      this.state = {\n        message: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n    handleSubmit(event) {\n      //const data = JSON.stringify(db)\n      let date = new Date();\n      let time = date.getHours() + \":\" + date.getMinutes();\n      event.preventDefault();\n      let message = {\n        sender: loggedUser,\n        msg: this.state.message,\n        time: time\n      };\n      this.newMessage(message);\n      //addMessage(true, this.state.message, time);\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"messageForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.message,\n            onChange: this.handleChange,\n            placeholder: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  //let counter = 3;\n\n  //const [searchQuery, setSearchQuery] = useState('');\n  /*\r\n  function addMessage(sndr, message, t) {\r\n      let id = counter++;\r\n      let newMessage = {id: { id }, sender: sndr, msg: message, time: t };\r\n      setMessages([...messages, newMessage]);\r\n  }\r\n  */\n\n  const handleUserClick = userName => {\n    setShowChat(1);\n    setSelectedUser(userName);\n    getMessages(userName);\n  };\n  const inprimatuMezuak = () => {\n    let mezuak = [];\n    for (let i = 0; i < messages.length; i++) {\n      mezuak.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          sender: messages[i].sender,\n          msg: messages[i].msg,\n          time: messages[i].time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this));\n    }\n    return mezuak;\n  };\n  const addFriend = () => {\n    setShowChat(0);\n  };\n  if (!friendList) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addFriend,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(UserList, {\n            recentUsers: friendList,\n            handleUserClick: handleUserClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: showChat == 0 ? /*#__PURE__*/_jsxDEV(Follow, {\n            logged: loggedUser,\n            friends: friendList,\n            refresh: refresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this) : showChat == 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Chat Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: inprimatuMezuak().map(message => message)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(MessageForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select a friend to chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Chat, \"DWXdPciyfpmEzwcBtXwfOXvI5lI=\");\n_c = Chat;\nexport default Chat;\n\n/*\r\n\r\n            const filteredUserList = userList.filter((user) =>{\r\n                    console.log(user);\r\n                    user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n                }\r\n            );\r\n\r\n                    <nav>\r\n                        <UserList recentUsers={filteredUserList} handleUserClick={handleUserClick} />\r\n                    </nav>\r\n\r\n                            {messages.map((message) => (\r\n                                <li key={message}>\r\n                                    <Message sender={message.sender} msg={message.msg} time={message.time} />\r\n                                </li>\r\n                            ))}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","UserList","Follow","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","handleChat","loggedUser","selectedUser","setSelectedUser","friendList","setFriendList","showChat","setShowChat","getUsers","response","fetch","data","json","message","friends","document","querySelector","innerHTML","err","console","error","getMessages","friendName","setMessages","messages","logout","refresh","Message","_ref2","sender","msg","time","className","timeClass","children","fileName","_jsxFileName","lineNumber","columnNumber","MessageForm","Component","constructor","props","newMessage","username","friend","method","headers","body","JSON","stringify","then","log","state","handleChange","bind","handleSubmit","event","setState","target","value","date","Date","getHours","getMinutes","preventDefault","render","onSubmit","type","onChange","placeholder","handleUserClick","userName","inprimatuMezuak","mezuak","i","length","push","addFriend","onClick","recentUsers","logged","map","_c","$RefreshReg$"],"sources":["C:/Users/kimet/Documents/Ni/L-W/USB/KUATRI2/SGTA/Osagarri/ChatClient/src/components/Chat.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './style/Chat.css';\r\n//import man1 from './img/man1.png';\r\n//import man2 from './img/man2.png';\r\n//import man3 from './img/man3.png';\r\n//import woman1 from './img/woman1.png';\r\n//import woman2 from './img/woman2.png';\r\nimport UserList from './UserList.js';\r\nimport Follow from './Follow.js';\r\n\r\nfunction Chat({handleChat, loggedUser}) {\r\n\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    //selectedUser={selectedUser}\r\n    \r\n    const [friendList, setFriendList] = useState(null);\r\n\r\n    const [showChat, setShowChat] = useState(3);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n      }, []);\r\n    \r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/friends/\" + loggedUser);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setFriendList(data.friends);\r\n                \r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getMessages = async (friendName) => {\r\n        try {\r\n            const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setMessages(data.messages);\r\n                document.querySelector(\".errorM\").innerHTML = \"\";\r\n            } else {\r\n                setMessages([]);\r\n                document.querySelector(\".errorM\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        handleChat(0);\r\n    }\r\n\r\n    const refresh = () => {\r\n        handleChat(1);\r\n    }\r\n    \r\n    const [messages, setMessages] = useState([]);\r\n\r\n    function Message({ sender, msg, time }) {\r\n        //let icon = sender ? man1 : man2;\r\n        let className = sender===loggedUser ? \"container2 darker\" : \"container2\";\r\n        //let imgClass = sender ? \"right\" : \"\";\r\n        let timeClass = sender===loggedUser ? \"time-left\" : \"time-right\";\r\n      return (\r\n        <div className={className}>\r\n            <p>{ msg }</p>\r\n            <span className={timeClass}>{ time }</span>\r\n        </div>\r\n      );\r\n      //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\r\n    }\r\n\r\n    class MessageForm extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {message: ''};\r\n    \r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n        handleChange(event) {\r\n            this.setState({message: event.target.value});\r\n        }\r\n\r\n        newMessage = (message) => {\r\n            const data = {\r\n                username: loggedUser,\r\n                friend: selectedUser,\r\n                message: message\r\n            };\r\n            fetch('/api/newMessage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                }).then(response => response.json()).then(data => {\r\n                    console.log(data);\r\n                    if (data.message === \"ok\") {\r\n                        document.querySelector(\".errorM\").innerHTML = \"\";\r\n                        getMessages(selectedUser);\r\n                    } else {\r\n                        document.querySelector(\".errorM\").innerHTML = data.message;\r\n                    }\r\n                });\r\n\r\n        }\r\n    \r\n        handleSubmit(event) {\r\n            //const data = JSON.stringify(db)\r\n            let date = new Date();\r\n            let time = date.getHours() + \":\" + date.getMinutes();\r\n            event.preventDefault();\r\n            let message = { sender: loggedUser, msg: this.state.message, time: time };\r\n            this.newMessage(message);\r\n            //addMessage(true, this.state.message, time);\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} className='messageForm'>\r\n                    <label>\r\n                        <input type=\"text\" value={this.state.message} onChange={this.handleChange} placeholder='Message'/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n    \r\n    //let counter = 3;\r\n\r\n    //const [searchQuery, setSearchQuery] = useState('');\r\n    /*\r\n    function addMessage(sndr, message, t) {\r\n        let id = counter++;\r\n        let newMessage = {id: { id }, sender: sndr, msg: message, time: t };\r\n        setMessages([...messages, newMessage]);\r\n    }\r\n    */\r\n\r\n    const handleUserClick = (userName) => {\r\n        setShowChat(1);\r\n        setSelectedUser(userName);\r\n        getMessages(userName);\r\n    };\r\n\r\n    const inprimatuMezuak = () => {\r\n        let mezuak = [];\r\n        for (let i = 0; i < messages.length; i++) {\r\n            mezuak.push(<li key={i}><Message sender={messages[i].sender} msg={messages[i].msg} time={messages[i].time} /></li>);\r\n        }\r\n        return mezuak;\r\n    }\r\n\r\n    const addFriend = () => {\r\n        setShowChat(0);\r\n    }\r\n\r\n    if (!friendList) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"cont\">\r\n                    <nav>\r\n                        <button onClick={addFriend}>+</button>\r\n                        <UserList recentUsers={friendList} handleUserClick={handleUserClick} />\r\n                        <button onClick={logout}>Logout</button>\r\n                        <p className=\"error\"></p>\r\n                    </nav>\r\n                    <main>\r\n                        {\r\n                            showChat == 0 ? (\r\n                                <Follow logged={loggedUser} friends={friendList} refresh={refresh} />\r\n                            ): showChat == 1 ?(\r\n                                <>\r\n                                    <h1>Chat Messages</h1>\r\n                                    <h2>{selectedUser}</h2>\r\n                                    <p className=\"errorM\"></p>\r\n                                    <ul>\r\n                                        {inprimatuMezuak().map((message) => (message))}\r\n                                    </ul>\r\n                                    <MessageForm/>\r\n                                </>\r\n                            ) : (\r\n                                <h1>Select a friend to chat</h1>\r\n                            )\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n\r\n/*\r\n\r\n            const filteredUserList = userList.filter((user) =>{\r\n                    console.log(user);\r\n                    user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n                }\r\n            );\r\n\r\n                    <nav>\r\n                        <UserList recentUsers={filteredUserList} handleUserClick={handleUserClick} />\r\n                    </nav>\r\n\r\n                            {messages.map((message) => (\r\n                                <li key={message}>\r\n                                    <Message sender={message.sender} msg={message.msg} time={message.time} />\r\n                                </li>\r\n                            ))}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}