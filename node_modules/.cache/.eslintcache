[{"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\index.js":"1","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\App.js":"2","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\reportWebVitals.js":"3","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Register.js":"4","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Chat.js":"5","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Login.js":"6","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\UserList.js":"7","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Follow.js":"8"},{"size":552,"mtime":1684174690379,"results":"9","hashOfConfig":"10"},{"size":1876,"mtime":1684234011891,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1684164852766,"results":"12","hashOfConfig":"10"},{"size":2789,"mtime":1684181278828,"results":"13","hashOfConfig":"10"},{"size":7118,"mtime":1684236718551,"results":"14","hashOfConfig":"10"},{"size":2918,"mtime":1684181227147,"results":"15","hashOfConfig":"10"},{"size":1434,"mtime":1684313160898,"results":"16","hashOfConfig":"10"},{"size":2968,"mtime":1684184964836,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k3w2w6",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\index.js",[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\App.js",[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Register.js",[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Chat.js",["45","46"],[],"import React, {useState, useEffect} from 'react';\r\nimport './style/Chat.css';\r\nimport UserList from './UserList.js';\r\nimport Follow from './Follow.js';\r\n\r\nfunction Chat({handleLogout}) {\r\n    const loggedUser = localStorage.getItem('session');\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    //selectedUser={selectedUser}\r\n    \r\n    const [friendList, setFriendList] = useState(null);\r\n\r\n    const [showChat, setShowChat] = useState(3);\r\n\r\n    function kargatu() {\r\n        if (showChat === 1) {\r\n            const messageList = document.getElementById('messageList');\r\n            function scrollDown() {\r\n                messageList.scrollTop = messageList.scrollHeight;\r\n            }\r\n            \r\n            scrollDown();\r\n            messageList.addEventListener('DOMSubtreeModified', scrollDown);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n      }, []);\r\n    \r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/friends/\" + loggedUser);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setFriendList(data.friends);\r\n                \r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getMessages = async (friendName) => {\r\n        try {\r\n            const response = await fetch(\"/api/messages/\" + loggedUser + \"/\" + friendName);\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                setMessages(data.messages);\r\n                document.querySelector(\".errorM\").innerHTML = \"\";\r\n            } else {\r\n                setMessages([]);\r\n                document.querySelector(\".errorM\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        handleLogout(0);\r\n    }\r\n    \r\n    const [messages, setMessages] = useState([]);\r\n\r\n    function Message({ sender, msg, time }) {\r\n        //let icon = sender ? man1 : man2;\r\n        let eskubi = sender===loggedUser;\r\n        let className = eskubi ? \"mezu darker\" : \"mezu lighter\";\r\n        //let imgClass = sender ? \"right\" : \"\";\r\n      return (\r\n        <div className='message'>\r\n            <div className={className}>\r\n                <p>{ msg }</p>\r\n                <span className=\"time\">{ time }</span>\r\n            </div>\r\n        </div>\r\n      );\r\n      //<img src={ icon } alt=\"Avatar\" className={imgClass}/>\r\n    }\r\n\r\n    class MessageForm extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {message: ''};\r\n    \r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n        handleChange(event) {\r\n            this.setState({message: event.target.value});\r\n        }\r\n\r\n        newMessage = (message) => {\r\n            const data = {\r\n                username: loggedUser,\r\n                friend: selectedUser,\r\n                message: message\r\n            };\r\n            fetch('/api/newMessage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                }).then(response => response.json()).then(data => {\r\n                    console.log(data);\r\n                    if (data.message === \"ok\") {\r\n                        document.querySelector(\".errorM\").innerHTML = \"\";\r\n                        getMessages(selectedUser);\r\n                    } else {\r\n                        document.querySelector(\".errorM\").innerHTML = data.message;\r\n                    }\r\n                });\r\n        }\r\n    \r\n        handleSubmit(event) {\r\n            //const data = JSON.stringify(db)\r\n            let date = new Date();\r\n            let hours= date.getHours();\r\n            let minutes = date.getMinutes();\r\n            let time = (hours<10 ? \"0\"+hours : hours) + \":\" + (minutes<10 ? \"0\"+minutes : minutes);\r\n            event.preventDefault();\r\n            let message = { sender: loggedUser, msg: this.state.message, time: time };\r\n            this.newMessage(message);\r\n            //addMessage(true, this.state.message, time);\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} className='messageForm'>\r\n                    <label>\r\n                        <input type=\"text\" value={this.state.message} onChange={this.handleChange} placeholder='Message'/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\">\" />\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\n    const handleUserClick = (userName) => {\r\n        setShowChat(1);\r\n        setSelectedUser(userName);\r\n        getMessages(userName);\r\n    };\r\n\r\n    const inprimatuMezuak = () => {\r\n        let mezuak = [];\r\n        for (let i = 0; i < messages.length; i++) {\r\n            mezuak.push(<li key={i}><Message sender={messages[i].sender} msg={messages[i].msg} time={messages[i].time} /></li>);\r\n        }\r\n        \r\n        return mezuak;\r\n    }\r\n\r\n    const addFriend = () => {\r\n        setShowChat(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        kargatu();\r\n    }, [showChat]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cont\">\r\n                <nav>\r\n                    <UserList recentUsers={friendList? friendList : []} handleUserClick={handleUserClick} selectedUser = {selectedUser} />\r\n                    <button onClick={addFriend} className='addFriendButton'>+</button>\r\n                    <p className=\"error\"></p>\r\n                    <button onClick={logout} className='logout'>Logout</button>\r\n                </nav>\r\n                <main id='main'>\r\n                    {\r\n                        showChat === 0 ? (\r\n                            <Follow logged={loggedUser} friends={friendList} />\r\n                        ): showChat === 1 ?(\r\n                            <>\r\n                                <div className=\"chat\">\r\n                                    <h1>Chat Messages</h1>\r\n                                    <h2>{selectedUser}</h2>\r\n                                    <div id=\"messageList\" className='messageList'>\r\n                                        <p className=\"errorM\"></p>\r\n                                        <ul>\r\n                                            {inprimatuMezuak().map((message) => (message))}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <MessageForm/>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <h1>Select a friend to chat</h1>\r\n                        )\r\n                    }\r\n                </main>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;","C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Login.js",[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\UserList.js",[],[],"C:\\Users\\kimet\\Documents\\Ni\\L-W\\USB\\KUATRI2\\SGTA\\Osagarri\\ChatClient\\src\\components\\Follow.js",["47"],[],"import React, {useState, useEffect} from 'react';\r\nimport './style/Follow.css';\r\n\r\n\r\nfunction Follow({logged, friends}){\r\n\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n    if (!friends) {\r\n        friends = [];\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n    \r\n    const eraikiLista = (list) => {\r\n        let lista = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].username !== logged && !friends.includes(list[i].username)) {\r\n                lista.push(list[i]);\r\n            }\r\n        }\r\n        setUserList(lista);\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/users/\");\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                eraikiLista(data.users);\r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const addFriend = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/addFriend/\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify({username: logged, friend: selectedUser})\r\n            });\r\n            const data = await response.json();\r\n            if (data.message === \"ok\") {\r\n                window.location.reload(true);\r\n            } else {\r\n                document.querySelector(\".error\").innerHTML = data.message;\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    const selectToFollow = (user) => {\r\n        return () => {\r\n            document.querySelector(\".error\").innerHTML = \"\";\r\n            setSelectedUser(user);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"Follow\">\r\n            <h1>Follow</h1>\r\n            <div className=\"userList\">\r\n                <ul>\r\n                {\r\n                    userList.length>0 ? (\r\n                        <>\r\n                            {userList.map((user) => (\r\n                                <li key={user.username} onClick={selectToFollow(user.username)} className={ selectedUser===user.username ? \"selected\" : \"noSelected\" } >\r\n                                    <div>\r\n                                        <label>{user.username}</label>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                            <button onClick={addFriend}>Follow</button>\r\n                        </>\r\n                    ):(\r\n                        <p>No friends to add</p>\r\n                    )\r\n                }\r\n                </ul>\r\n            </div>\r\n            <p className=\"error\"></p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Follow;",{"ruleId":"48","severity":1,"message":"49","line":29,"column":10,"nodeType":"50","endLine":29,"endColumn":12,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":165,"column":8,"nodeType":"50","endLine":165,"endColumn":18,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"49","line":16,"column":8,"nodeType":"50","endLine":16,"endColumn":10,"suggestions":"54"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useEffect has a missing dependency: 'kargatu'. Either include it or remove the dependency array.",["56"],["57"],{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},{"desc":"58","fix":"62"},"Update the dependencies array to be: [getUsers]",{"range":"63","text":"64"},"Update the dependencies array to be: [kargatu, showChat]",{"range":"65","text":"66"},{"range":"67","text":"64"},[898,900],"[getUsers]",[5459,5469],"[kargatu, showChat]",[342,344]]